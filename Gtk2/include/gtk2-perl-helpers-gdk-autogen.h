#define SvGdkColormap(o) ((GdkColormap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkColormap"))))
#define SvGdkColormap_nullok(o) (SvROK(o) ? ((GdkColormap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkColormap")))) : NULL)
#define SvGdkDisplay(o) ((GdkDisplay*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDisplay"))))
#define SvGdkDisplay_nullok(o) (SvROK(o) ? ((GdkDisplay*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDisplay")))) : NULL)
#define SvGdkDisplayManager(o) ((GdkDisplayManager*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDisplayManager"))))
#define SvGdkDisplayManager_nullok(o) (SvROK(o) ? ((GdkDisplayManager*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDisplayManager")))) : NULL)
#define SvGdkDragContext(o) ((GdkDragContext*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDragContext"))))
#define SvGdkDragContext_nullok(o) (SvROK(o) ? ((GdkDragContext*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDragContext")))) : NULL)
#define SvGdkDrawable(o) ((GdkDrawable*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDrawable"))))
#define SvGdkDrawable_nullok(o) (SvROK(o) ? ((GdkDrawable*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkDrawable")))) : NULL)
#define SvGdkGC(o) ((GdkGC*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkGC"))))
#define SvGdkGC_nullok(o) (SvROK(o) ? ((GdkGC*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkGC")))) : NULL)
#define SvGdkImage(o) ((GdkImage*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkImage"))))
#define SvGdkImage_nullok(o) (SvROK(o) ? ((GdkImage*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkImage")))) : NULL)
#define SvGdkKeymap(o) ((GdkKeymap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkKeymap"))))
#define SvGdkKeymap_nullok(o) (SvROK(o) ? ((GdkKeymap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkKeymap")))) : NULL)
#define SvGdkPixmapObject(o) ((GdkPixmapObject*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixmapObject"))))
#define SvGdkPixmapObject_nullok(o) (SvROK(o) ? ((GdkPixmapObject*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixmapObject")))) : NULL)
#define SvGdkScreen(o) ((GdkScreen*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkScreen"))))
#define SvGdkScreen_nullok(o) (SvROK(o) ? ((GdkScreen*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkScreen")))) : NULL)
#define SvGdkWindowObject(o) ((GdkWindowObject*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkWindowObject"))))
#define SvGdkWindowObject_nullok(o) (SvROK(o) ? ((GdkWindowObject*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkWindowObject")))) : NULL)
#define SvGdkPixbufAnimation(o) ((GdkPixbufAnimation*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufAnimation"))))
#define SvGdkPixbufAnimation_nullok(o) (SvROK(o) ? ((GdkPixbufAnimation*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufAnimation")))) : NULL)
#define SvGdkPixbufAnimationIter(o) ((GdkPixbufAnimationIter*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufAnimationIter"))))
#define SvGdkPixbufAnimationIter_nullok(o) (SvROK(o) ? ((GdkPixbufAnimationIter*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufAnimationIter")))) : NULL)
#define SvGdkPixbufLoader(o) ((GdkPixbufLoader*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufLoader"))))
#define SvGdkPixbufLoader_nullok(o) (SvROK(o) ? ((GdkPixbufLoader*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbufLoader")))) : NULL)
#define SvGdkColor(o) ((GdkColor*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkColor"))))
#define SvGdkColor_nullok(o) (SvROK(o) ? ((GdkColor*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkColor")))) : NULL)
#define SvGdkVisual(o) ((GdkVisual*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkVisual"))))
#define SvGdkVisual_nullok(o) (SvROK(o) ? ((GdkVisual*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkVisual")))) : NULL)
#define SvGdkWindow(o) ((GdkWindow*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkWindow"))))
#define SvGdkWindow_nullok(o) (SvROK(o) ? ((GdkWindow*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkWindow")))) : NULL)
#define SvGdkEvent(o) ((GdkEvent*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEvent"))))
#define SvGdkEvent_nullok(o) (SvROK(o) ? ((GdkEvent*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEvent")))) : NULL)
#define SvGdkCursor(o) ((GdkCursor*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkCursor"))))
#define SvGdkCursor_nullok(o) (SvROK(o) ? ((GdkCursor*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkCursor")))) : NULL)
#define SvGdkPixbuf(o) ((GdkPixbuf*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbuf"))))
#define SvGdkPixbuf_nullok(o) (SvROK(o) ? ((GdkPixbuf*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixbuf")))) : NULL)
#define SvGdkPixmap(o) ((GdkPixmap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixmap"))))
#define SvGdkPixmap_nullok(o) (SvROK(o) ? ((GdkPixmap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPixmap")))) : NULL)
#define SvGdkBitmap(o) ((GdkBitmap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkBitmap"))))
#define SvGdkBitmap_nullok(o) (SvROK(o) ? ((GdkBitmap*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkBitmap")))) : NULL)
#define SvGdkRectangle(o) ((GdkRectangle*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkRectangle"))))
#define SvGdkRectangle_nullok(o) (SvROK(o) ? ((GdkRectangle*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkRectangle")))) : NULL)
#define SvGdkPoint(o) ((GdkPoint*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPoint"))))
#define SvGdkPoint_nullok(o) (SvROK(o) ? ((GdkPoint*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkPoint")))) : NULL)
#define SvGdkSegment(o) ((GdkSegment*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkSegment"))))
#define SvGdkSegment_nullok(o) (SvROK(o) ? ((GdkSegment*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkSegment")))) : NULL)
#define SvGdkSpan(o) ((GdkSpan*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkSpan"))))
#define SvGdkSpan_nullok(o) (SvROK(o) ? ((GdkSpan*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkSpan")))) : NULL)
#define SvGdkEventAny(o) ((GdkEventAny*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventAny"))))
#define SvGdkEventAny_nullok(o) (SvROK(o) ? ((GdkEventAny*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventAny")))) : NULL)
#define SvGdkEventButton(o) ((GdkEventButton*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventButton"))))
#define SvGdkEventButton_nullok(o) (SvROK(o) ? ((GdkEventButton*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventButton")))) : NULL)
#define SvGdkEventClient(o) ((GdkEventClient*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventClient"))))
#define SvGdkEventClient_nullok(o) (SvROK(o) ? ((GdkEventClient*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventClient")))) : NULL)
#define SvGdkEventConfigure(o) ((GdkEventConfigure*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventConfigure"))))
#define SvGdkEventConfigure_nullok(o) (SvROK(o) ? ((GdkEventConfigure*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventConfigure")))) : NULL)
#define SvGdkEventCrossing(o) ((GdkEventCrossing*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventCrossing"))))
#define SvGdkEventCrossing_nullok(o) (SvROK(o) ? ((GdkEventCrossing*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventCrossing")))) : NULL)
#define SvGdkEventDND(o) ((GdkEventDND*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventDND"))))
#define SvGdkEventDND_nullok(o) (SvROK(o) ? ((GdkEventDND*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventDND")))) : NULL)
#define SvGdkEventExpose(o) ((GdkEventExpose*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventExpose"))))
#define SvGdkEventExpose_nullok(o) (SvROK(o) ? ((GdkEventExpose*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventExpose")))) : NULL)
#define SvGdkEventFocus(o) ((GdkEventFocus*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventFocus"))))
#define SvGdkEventFocus_nullok(o) (SvROK(o) ? ((GdkEventFocus*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventFocus")))) : NULL)
#define SvGdkEventKey(o) ((GdkEventKey*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventKey"))))
#define SvGdkEventKey_nullok(o) (SvROK(o) ? ((GdkEventKey*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventKey")))) : NULL)
#define SvGdkEventMotion(o) ((GdkEventMotion*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventMotion"))))
#define SvGdkEventMotion_nullok(o) (SvROK(o) ? ((GdkEventMotion*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventMotion")))) : NULL)
#define SvGdkEventNoExpose(o) ((GdkEventNoExpose*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventNoExpose"))))
#define SvGdkEventNoExpose_nullok(o) (SvROK(o) ? ((GdkEventNoExpose*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventNoExpose")))) : NULL)
#define SvGdkEventProperty(o) ((GdkEventProperty*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventProperty"))))
#define SvGdkEventProperty_nullok(o) (SvROK(o) ? ((GdkEventProperty*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventProperty")))) : NULL)
#define SvGdkEventProximity(o) ((GdkEventProximity*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventProximity"))))
#define SvGdkEventProximity_nullok(o) (SvROK(o) ? ((GdkEventProximity*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventProximity")))) : NULL)
#define SvGdkEventScroll(o) ((GdkEventScroll*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventScroll"))))
#define SvGdkEventScroll_nullok(o) (SvROK(o) ? ((GdkEventScroll*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventScroll")))) : NULL)
#define SvGdkEventSelection(o) ((GdkEventSelection*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventSelection"))))
#define SvGdkEventSelection_nullok(o) (SvROK(o) ? ((GdkEventSelection*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventSelection")))) : NULL)
#define SvGdkEventSetting(o) ((GdkEventSetting*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventSetting"))))
#define SvGdkEventSetting_nullok(o) (SvROK(o) ? ((GdkEventSetting*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventSetting")))) : NULL)
#define SvGdkEventWindowState(o) ((GdkEventWindowState*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventWindowState"))))
#define SvGdkEventWindowState_nullok(o) (SvROK(o) ? ((GdkEventWindowState*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventWindowState")))) : NULL)
#define SvGdkEventVisibility(o) ((GdkEventVisibility*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventVisibility"))))
#define SvGdkEventVisibility_nullok(o) (SvROK(o) ? ((GdkEventVisibility*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkEventVisibility")))) : NULL)
#define SvGdkAtom(o) ((GdkAtom*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkAtom"))))
#define SvGdkAtom_nullok(o) (SvROK(o) ? ((GdkAtom*) SvIV(SvRV(gtk2_perl_check_type(o, "GdkAtom")))) : NULL)
#define SvGdkCursorType(o) gtk2_perl_convert_enum(GDK_TYPE_CURSOR_TYPE, o)
#define newSVGdkCursorType(o) gtk2_perl_convert_back_enum(GDK_TYPE_CURSOR_TYPE, o)
#define SvGdkDragAction(o) gtk2_perl_convert_flags(GDK_TYPE_DRAG_ACTION, o)
#define newSVGdkDragAction(o) gtk2_perl_convert_back_flags(GDK_TYPE_DRAG_ACTION, o)
#define SvGdkDragProtocol(o) gtk2_perl_convert_enum(GDK_TYPE_DRAG_PROTOCOL, o)
#define newSVGdkDragProtocol(o) gtk2_perl_convert_back_enum(GDK_TYPE_DRAG_PROTOCOL, o)
#define SvGdkFilterReturn(o) gtk2_perl_convert_enum(GDK_TYPE_FILTER_RETURN, o)
#define newSVGdkFilterReturn(o) gtk2_perl_convert_back_enum(GDK_TYPE_FILTER_RETURN, o)
#define SvGdkEventType(o) gtk2_perl_convert_enum(GDK_TYPE_EVENT_TYPE, o)
#define newSVGdkEventType(o) gtk2_perl_convert_back_enum(GDK_TYPE_EVENT_TYPE, o)
#define SvGdkEventMask(o) gtk2_perl_convert_flags(GDK_TYPE_EVENT_MASK, o)
#define newSVGdkEventMask(o) gtk2_perl_convert_back_flags(GDK_TYPE_EVENT_MASK, o)
#define SvGdkVisibilityState(o) gtk2_perl_convert_enum(GDK_TYPE_VISIBILITY_STATE, o)
#define newSVGdkVisibilityState(o) gtk2_perl_convert_back_enum(GDK_TYPE_VISIBILITY_STATE, o)
#define SvGdkScrollDirection(o) gtk2_perl_convert_enum(GDK_TYPE_SCROLL_DIRECTION, o)
#define newSVGdkScrollDirection(o) gtk2_perl_convert_back_enum(GDK_TYPE_SCROLL_DIRECTION, o)
#define SvGdkNotifyType(o) gtk2_perl_convert_enum(GDK_TYPE_NOTIFY_TYPE, o)
#define newSVGdkNotifyType(o) gtk2_perl_convert_back_enum(GDK_TYPE_NOTIFY_TYPE, o)
#define SvGdkCrossingMode(o) gtk2_perl_convert_enum(GDK_TYPE_CROSSING_MODE, o)
#define newSVGdkCrossingMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_CROSSING_MODE, o)
#define SvGdkPropertyState(o) gtk2_perl_convert_enum(GDK_TYPE_PROPERTY_STATE, o)
#define newSVGdkPropertyState(o) gtk2_perl_convert_back_enum(GDK_TYPE_PROPERTY_STATE, o)
#define SvGdkWindowState(o) gtk2_perl_convert_flags(GDK_TYPE_WINDOW_STATE, o)
#define newSVGdkWindowState(o) gtk2_perl_convert_back_flags(GDK_TYPE_WINDOW_STATE, o)
#define SvGdkSettingAction(o) gtk2_perl_convert_enum(GDK_TYPE_SETTING_ACTION, o)
#define newSVGdkSettingAction(o) gtk2_perl_convert_back_enum(GDK_TYPE_SETTING_ACTION, o)
#define SvGdkFontType(o) gtk2_perl_convert_enum(GDK_TYPE_FONT_TYPE, o)
#define newSVGdkFontType(o) gtk2_perl_convert_back_enum(GDK_TYPE_FONT_TYPE, o)
#define SvGdkCapStyle(o) gtk2_perl_convert_enum(GDK_TYPE_CAP_STYLE, o)
#define newSVGdkCapStyle(o) gtk2_perl_convert_back_enum(GDK_TYPE_CAP_STYLE, o)
#define SvGdkFill(o) gtk2_perl_convert_enum(GDK_TYPE_FILL, o)
#define newSVGdkFill(o) gtk2_perl_convert_back_enum(GDK_TYPE_FILL, o)
#define SvGdkFunction(o) gtk2_perl_convert_enum(GDK_TYPE_FUNCTION, o)
#define newSVGdkFunction(o) gtk2_perl_convert_back_enum(GDK_TYPE_FUNCTION, o)
#define SvGdkJoinStyle(o) gtk2_perl_convert_enum(GDK_TYPE_JOIN_STYLE, o)
#define newSVGdkJoinStyle(o) gtk2_perl_convert_back_enum(GDK_TYPE_JOIN_STYLE, o)
#define SvGdkLineStyle(o) gtk2_perl_convert_enum(GDK_TYPE_LINE_STYLE, o)
#define newSVGdkLineStyle(o) gtk2_perl_convert_back_enum(GDK_TYPE_LINE_STYLE, o)
#define SvGdkSubwindowMode(o) gtk2_perl_convert_enum(GDK_TYPE_SUBWINDOW_MODE, o)
#define newSVGdkSubwindowMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_SUBWINDOW_MODE, o)
#define SvGdkGCValuesMask(o) gtk2_perl_convert_flags(GDK_TYPE_GC_VALUES_MASK, o)
#define newSVGdkGCValuesMask(o) gtk2_perl_convert_back_flags(GDK_TYPE_GC_VALUES_MASK, o)
#define SvGdkImageType(o) gtk2_perl_convert_enum(GDK_TYPE_IMAGE_TYPE, o)
#define newSVGdkImageType(o) gtk2_perl_convert_back_enum(GDK_TYPE_IMAGE_TYPE, o)
#define SvGdkExtensionMode(o) gtk2_perl_convert_enum(GDK_TYPE_EXTENSION_MODE, o)
#define newSVGdkExtensionMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_EXTENSION_MODE, o)
#define SvGdkInputSource(o) gtk2_perl_convert_enum(GDK_TYPE_INPUT_SOURCE, o)
#define newSVGdkInputSource(o) gtk2_perl_convert_back_enum(GDK_TYPE_INPUT_SOURCE, o)
#define SvGdkInputMode(o) gtk2_perl_convert_enum(GDK_TYPE_INPUT_MODE, o)
#define newSVGdkInputMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_INPUT_MODE, o)
#define SvGdkAxisUse(o) gtk2_perl_convert_enum(GDK_TYPE_AXIS_USE, o)
#define newSVGdkAxisUse(o) gtk2_perl_convert_back_enum(GDK_TYPE_AXIS_USE, o)
#define SvGdkPropMode(o) gtk2_perl_convert_enum(GDK_TYPE_PROP_MODE, o)
#define newSVGdkPropMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_PROP_MODE, o)
#define SvGdkFillRule(o) gtk2_perl_convert_enum(GDK_TYPE_FILL_RULE, o)
#define newSVGdkFillRule(o) gtk2_perl_convert_back_enum(GDK_TYPE_FILL_RULE, o)
#define SvGdkOverlapType(o) gtk2_perl_convert_enum(GDK_TYPE_OVERLAP_TYPE, o)
#define newSVGdkOverlapType(o) gtk2_perl_convert_back_enum(GDK_TYPE_OVERLAP_TYPE, o)
#define SvGdkRgbDither(o) gtk2_perl_convert_enum(GDK_TYPE_RGB_DITHER, o)
#define newSVGdkRgbDither(o) gtk2_perl_convert_back_enum(GDK_TYPE_RGB_DITHER, o)
#define SvGdkByteOrder(o) gtk2_perl_convert_enum(GDK_TYPE_BYTE_ORDER, o)
#define newSVGdkByteOrder(o) gtk2_perl_convert_back_enum(GDK_TYPE_BYTE_ORDER, o)
#define SvGdkModifierType(o) gtk2_perl_convert_flags(GDK_TYPE_MODIFIER_TYPE, o)
#define newSVGdkModifierType(o) gtk2_perl_convert_back_flags(GDK_TYPE_MODIFIER_TYPE, o)
#define SvGdkInputCondition(o) gtk2_perl_convert_flags(GDK_TYPE_INPUT_CONDITION, o)
#define newSVGdkInputCondition(o) gtk2_perl_convert_back_flags(GDK_TYPE_INPUT_CONDITION, o)
#define SvGdkStatus(o) gtk2_perl_convert_enum(GDK_TYPE_STATUS, o)
#define newSVGdkStatus(o) gtk2_perl_convert_back_enum(GDK_TYPE_STATUS, o)
#define SvGdkGrabStatus(o) gtk2_perl_convert_enum(GDK_TYPE_GRAB_STATUS, o)
#define newSVGdkGrabStatus(o) gtk2_perl_convert_back_enum(GDK_TYPE_GRAB_STATUS, o)
#define SvGdkVisualType(o) gtk2_perl_convert_enum(GDK_TYPE_VISUAL_TYPE, o)
#define newSVGdkVisualType(o) gtk2_perl_convert_back_enum(GDK_TYPE_VISUAL_TYPE, o)
#define SvGdkWindowClass(o) gtk2_perl_convert_enum(GDK_TYPE_WINDOW_CLASS, o)
#define newSVGdkWindowClass(o) gtk2_perl_convert_back_enum(GDK_TYPE_WINDOW_CLASS, o)
#define SvGdkWindowType(o) gtk2_perl_convert_enum(GDK_TYPE_WINDOW_TYPE, o)
#define newSVGdkWindowType(o) gtk2_perl_convert_back_enum(GDK_TYPE_WINDOW_TYPE, o)
#define SvGdkWindowAttributesType(o) gtk2_perl_convert_flags(GDK_TYPE_WINDOW_ATTRIBUTES_TYPE, o)
#define newSVGdkWindowAttributesType(o) gtk2_perl_convert_back_flags(GDK_TYPE_WINDOW_ATTRIBUTES_TYPE, o)
#define SvGdkWindowHints(o) gtk2_perl_convert_flags(GDK_TYPE_WINDOW_HINTS, o)
#define newSVGdkWindowHints(o) gtk2_perl_convert_back_flags(GDK_TYPE_WINDOW_HINTS, o)
#define SvGdkWindowTypeHint(o) gtk2_perl_convert_enum(GDK_TYPE_WINDOW_TYPE_HINT, o)
#define newSVGdkWindowTypeHint(o) gtk2_perl_convert_back_enum(GDK_TYPE_WINDOW_TYPE_HINT, o)
#define SvGdkWMDecoration(o) gtk2_perl_convert_flags(GDK_TYPE_WM_DECORATION, o)
#define newSVGdkWMDecoration(o) gtk2_perl_convert_back_flags(GDK_TYPE_WM_DECORATION, o)
#define SvGdkWMFunction(o) gtk2_perl_convert_flags(GDK_TYPE_WM_FUNCTION, o)
#define newSVGdkWMFunction(o) gtk2_perl_convert_back_flags(GDK_TYPE_WM_FUNCTION, o)
#define SvGdkGravity(o) gtk2_perl_convert_enum(GDK_TYPE_GRAVITY, o)
#define newSVGdkGravity(o) gtk2_perl_convert_back_enum(GDK_TYPE_GRAVITY, o)
#define SvGdkWindowEdge(o) gtk2_perl_convert_enum(GDK_TYPE_WINDOW_EDGE, o)
#define newSVGdkWindowEdge(o) gtk2_perl_convert_back_enum(GDK_TYPE_WINDOW_EDGE, o)
#define SvGdkPixbufAlphaMode(o) gtk2_perl_convert_enum(GDK_TYPE_PIXBUF_ALPHA_MODE, o)
#define newSVGdkPixbufAlphaMode(o) gtk2_perl_convert_back_enum(GDK_TYPE_PIXBUF_ALPHA_MODE, o)
#define SvGdkColorspace(o) gtk2_perl_convert_enum(GDK_TYPE_COLORSPACE, o)
#define newSVGdkColorspace(o) gtk2_perl_convert_back_enum(GDK_TYPE_COLORSPACE, o)
#define SvGdkPixbufError(o) gtk2_perl_convert_enum(GDK_TYPE_PIXBUF_ERROR, o)
#define newSVGdkPixbufError(o) gtk2_perl_convert_back_enum(GDK_TYPE_PIXBUF_ERROR, o)
#define SvGdkInterpType(o) gtk2_perl_convert_enum(GDK_TYPE_INTERP_TYPE, o)
#define newSVGdkInterpType(o) gtk2_perl_convert_back_enum(GDK_TYPE_INTERP_TYPE, o)
